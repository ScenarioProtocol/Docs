(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[886],{5229:function(e,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/user-categories",function(){return s(8166)}])},8166:function(e,n,s){"use strict";s.r(n),s.d(n,{__N_SSG:function(){return o}});var r=s(5893),i=s(1151);function a(e){let n=Object.assign({h1:"h1",p:"p",h2:"h2",ul:"ul",li:"li"},(0,i.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{children:"Protocol User Categories"}),"\n",(0,r.jsx)(n.p,{children:"Who are SCENARIO’s users and what are their roles?"}),"\n",(0,r.jsx)(n.h2,{id:"askers",children:"Askers"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"An asker is a user who wishes to be notified as soon as a scenario has occurred and/or when specific scenario conditions have been met."}),"\n",(0,r.jsxs)(n.li,{children:["Askers fall into two categories:",(0,r.jsx)("br",{}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("span",{class:"text-emerald-500",children:"Asker-maker"}),": a user who generates a new scenario on the platform by defining the parameters for their notification and paying ETH to create a scenario pool. ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("span",{class:"text-emerald-500",children:"Asker-joiner"}),": a user who 'joins in' by adding ETH to an existing scenario pool because they also wish to be notified when that scenario’s conditions are met."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"Any user of the platform can act as an asker-maker or an asker-joiner at any time."}),"\n",(0,r.jsx)(n.li,{children:"Askers play a crucial role in populating the protocol with scenario pools, joining other user-created pools, and generating protocol revenue. At scale, askers are likely to constitute the greater majority of users; many askers may never engage with the full suite of protocol activities such as staking or confirming, instead accessing it only through more abstracted front-ends."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"confirmers",children:"Confirmers"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"A confirmer is a user who confirms that a scenario has occurred (i.e. that its conditions have been met)."}),"\n",(0,r.jsxs)(n.li,{children:["Confirmers fall into two categories:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("span",{class:"text-emerald-500",children:"Confirmer-maker"}),": a user who is first to state that a scenario’s conditions have been met."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)("span",{class:"text-emerald-500",children:"Confirmer-joiner"}),": a user who ‘joins in’ by subsequently verifying that a scenario’s conditions have been met (i.e. by agreeing with the confirmer-maker)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:"A scenario is not considered resolved until it has been verified by a set number of confirmer-joiners (as specified in the parameters set by the scenario’s asker-maker)."}),"\n",(0,r.jsx)(n.li,{children:"Any user of the platform can act as a confirmer-maker or a confirmer-joiner at any time."}),"\n",(0,r.jsx)(n.li,{children:"Confirmers play a crucial role in ‘keeping the machine running’ by resolving scenario pools and triggering notifications for askers. Confirmers are economically incentivised to perform this role to a high standard. Confirmers will usually be engaged users who are likely to represent a smaller percentage of all users once the protocol has scaled."}),"\n"]})]})}var o=!0;n.default=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(a,e)})):a(e)}}},function(e){e.O(0,[774,888,179],function(){return e(e.s=5229)}),_N_E=e.O()}]);